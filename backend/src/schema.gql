# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddReadonlyUserListDto {
  email: String!
  listId: ID!
}

type Category {
  categories: [String!]!
  mainCategory: String!
}

input CreateListDto {
  allowDelete: [String!] = []
  allowEdit: [String!] = []
  allowView: [String!] = []
  description: String
  items: [String!] = []
  name: String!
  owner: String!
}

input CreateRecipeDto {
  allowDelete: [String!] = []
  allowEdit: [String!] = []
  allowView: [String!] = []
  cookTime: Int
  image: CreateRecipeImageDto
  ingredients: [String!] = []
  instructions: [String!] = []
  isExternalSrc: Boolean
  prepTime: Int
  servings: Int
  title: String!
  url: String
}

input CreateRecipeImageDto {
  height: Float
  id: String!
  src: String!
  width: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteManyRecipeDto {
  ids: [String!]!
}

input DeleteRecipeDto {
  id: String!
}

input FindUserByEmailDto {
  email: String!
}

input GetListByIdDto {
  id: ID!
}

input GetRandomRecipesDto {
  amount: Int = 10
}

type GroceryItem {
  code: Float
  id: String!
  imageUrl: String
  listId: String!
  quantity: Int!
  value: String!
}

type Image {
  alt: String
  height: Float
  sizes: [ImageSize!]
  src: String!
  width: Float
}

input ImageDto {
  alt: String
  height: Float
  sizes: [ImageSizeDto!]
  src: String!
  width: Float
}

type ImageSize {
  height: Float
  src: String!
  width: Float
}

input ImageSizeDto {
  height: Float
  sizes: [Int!] = [300, 600, 900]
  src: String!
  width: Float
}

type Item {
  brand: String!
  category: Category!
  code: String!
  codeUrl: String
  description: String!
  image: String
  name: String!
  specs: [Spec!]!
}

input ItemByUpcDto {
  code: String!
}

type List {
  allowDelete: [String!]!
  allowEdit: [String!]!
  allowView: [String!]!
  created: DateTime!
  description: String
  id: ID!
  items: [GroceryItem!]!
  name: String
  owner: ID!
  updated: DateTime!
}

input LoginDto {
  email: String!
  password: String!
}

type Logout {
  success: Boolean!
}

type Mutation {
  addAllowDelete(input: UpdateAllowDeleteDto!): Recipe!
  addAllowEdit(input: UpdateAllowEditDto!): Recipe!
  addAllowView(input: UpdateAllowViewDto!): Recipe!
  addReadOnlyUserToList(input: AddReadonlyUserListDto!): List!
  createList(input: CreateListDto!): List!
  createRecipe(input: CreateRecipeDto!): Recipe!
  deleteManyRecipes(input: DeleteManyRecipeDto!): [Recipe!]!
  deleteRecipe(input: DeleteRecipeDto!): Recipe!
  login(input: LoginDto!): User!
  logout: Logout!
  refreshToken: User!
  register(input: SignUpDto!): User!
  removeAllowDelete(input: UpdateAllowDeleteDto!): Recipe!
  removeAllowEdit(input: UpdateAllowEditDto!): Recipe!
  removeAllowView(input: UpdateAllowViewDto!): Recipe!
  updatePassword(input: UpdatePasswordDto!): User!
  updateRecipe(input: UpdateRecipeDto!): Recipe!
  updateUser(input: UpdateUserDto!): User!
}

enum Provider {
  FACEBOOK
  GOOGLE
  LOCAL
}

type Query {
  imageMetadata(input: ImageDto!): Image!
  itemByUpc(input: ItemByUpcDto!): Item
  list(input: GetListByIdDto!): List!
  lists: [List!]!
  me: User!
  randomRecipes(input: GetRandomRecipesDto!): [Recipe!]!
  recipe: Recipe!
  recipes: [Recipe!]!
  recipesByUser: [Recipe!]!
  recipesByUserEmail: [Recipe!]!
  user(input: FindUserByEmailDto!): User
}

type Recipe {
  allowDelete: [String!]
  allowEdit: [String!]
  allowView: [String!]
  cookTime: Int
  id: String!
  image: Image
  ingredients: [String!]!
  instructions: [String!]!
  isExternalSrc: Boolean
  prepTime: Int
  servings: Int
  title: String!
  url: String
  userId: String!
}

input SignUpDto {
  created: DateTime
  email: String!
  name: String
  password: String
  passwordCheck: String!
  provider: String
  refreshToken: String
  token: String
  updated: DateTime
}

type Spec {
  name: String!
  value: String!
}

input UpdateAllowDeleteDto {
  email: String!
  id: String!
}

input UpdateAllowEditDto {
  email: String!
  id: String!
}

input UpdateAllowViewDto {
  email: String!
  id: String!
}

input UpdatePasswordDto {
  currentPassword: String!
  newPassword: String!
}

input UpdateRecipeDto {
  allowDelete: [String!]
  allowEdit: [String!]
  allowView: [String!]
  cookTime: Int
  id: String!
  image: UpdateRecipeImageDto
  ingredients: [String!]
  instructions: [String!]
  isExternalSrc: Boolean
  prepTime: Int
  servings: Int
  title: String!
  url: String
}

input UpdateRecipeImageDto {
  height: Float
  id: String
  src: String
  width: Float
}

input UpdateUserDto {
  email: String
  name: String
}

type User {
  accessToken: String!
  created: DateTime
  email: String!
  id: ID!
  name: String
  password: String
  provider: Provider!
  refreshToken: String
  updated: DateTime
}